[
[
	{
		"id": "llm-agent-integration",
		"name": "LLM-Powered Call Agent Integration",
		"type": "ai-platform",
		"description": "Enterprise-grade agentic workflow unifying OpenAI function calling, LiveKit streaming, and SIP integration to automate cab-service and hiring hotlines.",
		"shortDescription": "Real-time LLM call agent that automates taxi booking and hiring workflows",
		"thumbnail": "/projects/llm-agent/thumbnail.svg",
		"category": "AI/ML Engineering",
		"featured": true,
		"startDate": "2025-06-01",
		"status": "active",
		"skills": [
			"Python",
			"FastAPI",
			"LLMs",
			"OpenAI API",
			"LiveKit",
			"WebSockets",
			"SIP Integration",
			"Prompt Engineering",
			"Automation"
		],
		"jobId": "ai-python-dev-2025"
	},
	{
		"id": "recruitment-automation-platform",
		"name": "AI Recruitment Automation Platform",
		"type": "ai-platform",
		"description": "LLM-driven hiring assistant that triages candidate resumes, ranks applicants, and triggers follow-up sequences to reduce HR screening effort by 50%.",
		"shortDescription": "LLM workflow that screens and ranks candidates with automated handoffs",
		"thumbnail": "/projects/recruitment-automation/thumbnail.svg",
		"category": "AI/ML Engineering",
		"featured": false,
		"startDate": "2025-07-01",
		"status": "active",
		"skills": [
			"Python",
			"FastAPI",
			"LLMs",
			"Prompt Engineering",
			"Automation",
			"Tableau",
			"Workflow Orchestration"
		],
		"jobId": "ai-python-dev-2025"
	},
	{
		"id": "qlik-powerbi-suite",
		"name": "Qlik & Power BI Dashboard Suite",
		"type": "analytics-platform",
		"description": "Modernized legacy fatality-claim reporting by rebuilding KPI dashboards across Qlik, Tableau, and Power BI with automated refreshes and Python ETL.",
		"shortDescription": "Unified BI dashboards with automated KPI refresh for insurance analytics",
		"thumbnail": "/projects/qlik-powerbi/thumbnail.svg",
		"category": "Business Intelligence",
		"featured": true,
		"startDate": "2024-09-01",
		"endDate": "2025-05-31",
		"status": "completed",
		"skills": [
			"Power BI",
			"Tableau",
			"Qlik Sense",
			"QlikView",
			"Python",
			"Plotly",
			"SQL",
			"Automation"
		],
		"jobId": "data-scientist-cis-2024"
	},
	{
		"id": "fatality-claims-analytics",
		"name": "Fatality Claims Forecasting & Automation",
		"type": "analytics-platform",
		"description": "Predictive analytics stack combining Python forecasting, anomaly detection, and Power BI scenario planning to cut manual reporting by 60%.",
		"shortDescription": "Predictive analytics stack for claim trends and processing KPIs",
		"thumbnail": "/projects/fatality-claims/thumbnail.svg",
		"category": "Business Intelligence",
		"featured": false,
		"startDate": "2024-10-01",
		"endDate": "2025-04-30",
		"status": "completed",
		"skills": [
			"Power BI",
			"Tableau",
			"Python",
			"Automation",
			"Forecasting",
			"SQL",
			"Plotly"
		],
		"jobId": "data-scientist-cis-2024"
	},
	{
		"id": "plantoai-vscode-copilot",
		"name": "Planto.ai VS Code Copilot",
		"type": "developer-tools",
		"description": "Context-aware VS Code workspace delivering visual-to-code conversion, schema-aware scaffolding, and AI pair-programming across 16+ languages.",
		"shortDescription": "AI-assisted VS Code workspace with visual-to-code automation",
		"thumbnail": "/projects/vscode-extension/thumbnail.svg",
		"category": "Developer Tools",
		"featured": true,
		"startDate": "2024-06-01",
		"endDate": "2024-09-30",
		"status": "beta",
		"skills": [
			"TypeScript",
			"VS Code API",
			"LLMs",
			"Context Management",
			"Next.js",
			"UX Design",
			"Figma API"
		],
		"jobId": "ds-ml-intern-plantoai-2024",
		"githubUrl": "https://github.com/codingpro-ai/planto-vscode",
		"demoUrl": "https://planto.ai/"
	},
	{
		"id": "real-estate-price",
		"name": "Real Estate Price Prediction",
		"type": "ml-service",
		"description": "Machine learning project focused on predicting real estate prices using advanced regression techniques with rich EDA dashboards.",
		"shortDescription": "ML-based real estate price prediction with interactive visualizations",
		"thumbnail": "/projects/real-estate/thumbnail.svg",
		"category": "Machine Learning",
		"featured": true,
		"startDate": "2023-01-15",
		"status": "completed",
		"skills": [
			"Python",
			"Scikit-learn",
			"Pandas",
			"Plotly",
			"Seaborn",
			"Jupyter",
			"EDA",
			"Regression"
		],
		"githubUrl": "https://github.com/Aditya-AR-A/real-estate-prediction",
		"demoUrl": "https://colab.research.google.com/drive/1XdrINdSetdRp22WV6SnGdLWgVMMt7J-8?usp=sharing"
	},
	{
		"id": "chess-helper",
		"name": "Real-Time Chess Helper using YOLOv8",
		"type": "computer-vision",
		"description": "Real-time chessboard state recognition with YOLOv8, streaming classification to enable assisted gameplay and coaching tools.",
		"shortDescription": "AI-powered chess analysis and training tool",
		"thumbnail": "/projects/chess-helper/thumbnail.svg",
		"category": "Computer Vision",
		"featured": true,
		"startDate": "2023-02-15",
		"status": "completed",
		"skills": [
			"YOLOv8",
			"Deep Learning",
			"Computer Vision",
			"Python",
			"JavaScript",
			"React",
			"Chess.js",
			"Stockfish"
		],
		"githubUrl": "https://github.com/Aditya-AR-A/chess-helper",
		"demoUrl": "https://chess-helper-demo.vercel.app"
	},
	{
		"id": "gender-emotion-detection",
		"name": "Gender, Nationality & Emotion Detection",
		"type": "computer-vision",
		"description": "Multi-task CNN that predicts gender, nationality, and emotion from face images with 98%+ accuracy.",
		"shortDescription": "CNN-based facial analysis system with 98%+ accuracy",
		"thumbnail": "/projects/gender-emotion/thumbnail.svg",
		"category": "Deep Learning",
		"featured": true,
		"startDate": "2023-03-01",
		"status": "completed",
		"skills": [
			"Python",
			"TensorFlow",
			"OpenCV",
			"CNN",
			"Deep Learning",
			"Computer Vision"
		],
		"githubUrl": "https://github.com/Aditya-AR-A/gender-emotion-detection"
	},
	{
		"id": "linkedin-sentiment",
		"name": "LinkedIn Feed Sentiment Analysis",
		"type": "nlp",
		"description": "Automated web scraping and transformer-based sentiment analysis over LinkedIn posts, achieving 91% accuracy with BERT fine-tuning.",
		"shortDescription": "NLP-based LinkedIn post analyzer",
		"thumbnail": "/projects/linkedin-sentiment/thumbnail.svg",
		"category": "Natural Language Processing",
		"featured": false,
		"startDate": "2023-04-15",
		"status": "completed",
		"skills": [
			"Python",
			"NLTK",
			"Transformers",
			"Sentiment Analysis",
			"NLP",
			"Data Visualization",
			"Web Scraping"
		],
		"githubUrl": "https://github.com/Aditya-AR-A/linkedin-sentiment"
	}
]
]
